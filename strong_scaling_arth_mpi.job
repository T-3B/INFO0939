#!/bin/bash
#
#SBATCH --exclusive
#SBATCH --partition=hmem
#SBATCH --output=job_output_strong_mpi_%j.out
#SBATCH --time=01:00:00
#SBATCH --nodes=1
#SBATCH --mem=0

module purge
module load OpenMPI

PROJECT_DIR="${HOME}/project_info0939"
EXEC_DIR="${PROJECT_DIR}/bin"
INPUT_DIR="${PROJECT_DIR}/example_inputs/simple"

MIN_RANKS=${SLURM_NNODES}
MAX_RANKS=$((SLURM_CPUS_ON_NODE * SLURM_NNODES))
EXE="${HOME}/project_info0939/bin/shallow_MPI" 
EXE_ARGS="param_simple.txt"

echo ""
echo " Strong scaling experiment start (MPI)"
echo " -------------------------------------"
echo "      Time: $(date)"
echo "    Job id: ${SLURM_JOBID}"
echo "     Nodes: $(scontrol show hostnames ${SLURM_JOB_NODELIST} | paste -s -d ' ')"
echo " Max ranks: ${MAX_RANKS}"
echo " ------------------------------------"
echo ""

for BIND in close spread; do

  echo   ""
  echo   " +----------------------------------------------------+"
  printf " | Strong scaling with processes %6s               |\n" ${BIND}
  echo   " +------------+-----------------+---------------------+"
  echo   " | Num. ranks | Time (from app) | Time (time command) |"
  echo   " +------------+-----------------+---------------------+"

  for (( NRANKS=${MIN_RANKS}; NRANKS<=${MAX_RANKS}; NRANKS*=2 )); do
    export OMP_NUM_THREADS=1

    SRUN_OPTS="--nodes=${SLURM_NNODES}"
    SRUN_OPTS="${SRUN_OPTS} --ntasks-per-node=$((NRANKS / SLURM_NNODES))"

    if [[ ${BIND} == spread ]]; then
      SRUN_OPTS="${SRUN_OPTS} --cpus-per-task=$((SLURM_CPUS_ON_NODE * SLURM_NNODES / NRANKS ))"
    else
      SRUN_OPTS="${SRUN_OPTS} --cpus-per-task=1"
    fi

    OUTPUT_DIR="results_strong_mpi_${SLURM_JOBID}/run-${NRANKS}ranks-${BIND}"
    OUTPUT_FILE=$(basename ${EXE})-${NRANKS}ranks.out

    mkdir -p ${OUTPUT_DIR}
    cp ${INPUT_DIR}/* ${OUTPUT_DIR}/
    pushd ${OUTPUT_DIR} &> /dev/null

    /usr/bin/time -f '%e' -o 'time.out' srun ${SRUN_OPTS} ${EXEC_DIR}/shallow_MPI ${EXE_ARGS} > ${OUTPUT_FILE}

    TIME_FROM_OUTPUT=$(sed -n -E 's/CPU Time: (.*) sec/\1/p' ${OUTPUT_FILE})
    TIME_FROM_TIME_CMD=$(cat time.out)

    printf " | %10s | %15.3f | %19.3f |\n" ${NRANKS} ${TIME_FROM_OUTPUT} ${TIME_FROM_TIME_CMD}

    popd &> /dev/null
  done

  echo " +------------+-----------------+---------------------+"
  echo ""
done

echo ""
echo " -----------------------------"
echo " End Time: $(date)"
echo " -----------------------------"
echo " Strong scaling experiment end"
